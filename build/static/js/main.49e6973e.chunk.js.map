{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","updatedObject","put","delete","Filter","handleFilterChange","filterName","onChange","value","PersonForm","addPerson","handleNameChange","newName","handleNumberChange","newNumber","onSubmit","type","Notification","message","className","Error","Person","name","number","clickDelete","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterName","notification","setNotification","error","setError","shownPersons","filter","person","toLowerCase","includes","lol","useEffect","personService","console","log","event","target","preventDefault","findIndex","returnedPerson","concat","setTimeout","window","confirm","newPerson","find","changedPerson","map","catch","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49e6973e.chunk.js","sourcesContent":["import axios from 'axios'\n// const baseurl = 'http://localhost:3001/persons'\nconst baseurl = '/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseurl)\n  return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseurl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedObject) => {\n  const request = axios.put(`${baseurl}/${id}`, updatedObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseurl}/${id}`) \n  return request.then()\n}\n\nexport default {getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport './index.css'\nconst Filter = ({handleFilterChange, filterName}) => {\n  return(\n    <div>\n      filter shown with: <input \n      onChange={handleFilterChange}\n      value={filterName}/>\n    </div>\n  )\n}\nconst PersonForm = ({addPerson, handleNameChange, newName, handleNumberChange, newNumber}) => {\n  return(\n    <>\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input \n          onChange={handleNameChange}\n          value={newName}/>\n        </div>\n        <div>\n          number: <input \n          onChange={handleNumberChange}\n          value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n    </>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message == null) {\n    return(\n      <>\n      </>\n    )\n  } else {\n    return (\n      <div className='notification'>\n        {message}\n      </div>\n    )\n  }\n}\n\nconst Error = ({message}) => {\n  if (message == null) {\n    return(\n      <>\n      </>\n    )\n  } else {\n    return (\n      <div className='error'>\n        {message}\n      </div>\n    )\n  }\n}\n\nconst Person = ({name, number, clickDelete}) => {\n  return (\n    <>\n      <li>\n        {name} {number} \n        <button onClick={clickDelete}>delete</button></li>\n    </>\n  )\n}\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ error, setError ] = useState(null)\n  const shownPersons = persons.filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\n  const lol = persons\n  useEffect(()=> {\n    personService\n    .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n  const addPerson = (event) => {\n    event.preventDefault()\n    const index = persons.findIndex(person => person.name === newName)\n    if(index === -1) {\n      personService\n        .create({name: newName, number : newNumber})\n          .then(returnedPerson =>  {\n            console.log(\"returned Person\", returnedPerson)\n            setPersons(persons.concat(returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setFilterName('')\n            setNotification(`Added ${returnedPerson.name}`)\n            setTimeout(() => setNotification(null), 5000)\n          })\n      // setPersons(persons.concat({name: newName, number: newNumber}))\n      \n    } else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) { \n        const newPerson = persons.find(person => person.name === newName)\n        const changedPerson = {...newPerson, number: newNumber}\n        personService\n        .update(newPerson.id, changedPerson)\n          .then((returnedPerson) => {\n            setPersons(persons.map(person => person.name !== newPerson.name ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setFilterName('')\n          }).catch(error => {\n            console.log('error on adding person:', error)\n            setError(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => setError(null), 5000)\n          })\n      }\n\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value)\n  }\n  const clickDelete = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) { \n      personService\n      .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n    \n  }\n  console.log(\"lol\", lol)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Error message={error}/>\n      <Filter handleFilterChange={handleFilterChange} filterName={filterName}/>\n      <h2>Add new person</h2>\n      <PersonForm addPerson={addPerson} handleNameChange={handleNameChange} newName={newName} handleNumberChange={handleNumberChange} newNumber={newNumber}/>\n      <h2>Numbers</h2>\n      <ul>\n        {shownPersons.map(person => \n          <Person \n            key={person.id} \n            name={person.name}\n            number={person.number} \n            clickDelete={() => clickDelete(person.id, person.name)}/>\n         )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}